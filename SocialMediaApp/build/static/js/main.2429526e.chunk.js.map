{"version":3,"sources":["../node_modules/encoding/lib sync","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","SAMPLE_IMAGE_CATEGORIES","name","IMAGE_FILTERS","fn","image","canvas","canvasContext","save","translate","width","scale","rect","height","clip","drawImage","restore","fillStyle","fill","beginPath","arc","Math","PI","globalCompositeOperation","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","displayedImage","sampleImages","imageFilters","offline","loadSampleImages","bind","assertThisInitialized","loadImageFromURL","handleImageCapture","renderDisplayedImageOnCanvas","getFlatCanvasImage","rotateDisplayedImage","applyFilterFunction","_this2","refs","imageCanvas","getContext","navigator","onLine","setState","window","addEventListener","_this3","sampleImagePromises","map","sampleImageCategory","concat","Promise","all","then","catch","error","alert","url","alt","arguments","length","undefined","image2base64","base64Src","img","Image","src","console","_this4","reader","FileReader","target","files","onload","result","readAsDataURL","xOffset","yOffset","aspectRatio","_this5","reject","onerror","toDataURL","_this6","rotate","filterFunction","_this7","_this8","react_default","a","createElement","className","App_Offline","App_LoadingBlocks","sampleImage","key","toLowerCase","onClick","ref","type","accept","onChange","htmlFor","canvasImage","imageFilter","Component","Offline","LoadingBlocks","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2429526e.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 120;","import React, { Component } from 'react';\nimport './App.css';\n\nimport image2base64 from 'image-to-base64';\n\nconst SAMPLE_IMAGE_CATEGORIES = [\n  {name: 'Travel', id: 431862},\n  {name: 'Patterns', id: 175083},\n  {name: 'Lifestyle', id: 399562}\n];\n\nconst IMAGE_FILTERS = [\n  {\n    name: 'flip',\n    fn: (image, canvas, canvasContext) => {\n      canvasContext.save();\n      canvasContext.translate(canvas.width, 0);\n      canvasContext.scale(-1, 1);\n      canvasContext.rect(0, 0, canvas.width / 2, canvas.height);\n      canvasContext.clip();\n      canvasContext.drawImage(image, 0, 0, canvas.width, canvas.height);\n      canvasContext.restore();\n    }\n  },\n  {\n    name: 'circle-mask',\n    fn: (image, canvas, canvasContext) => {\n      canvasContext.rect(0, 0, canvas.width, canvas.height);\n      canvasContext.fillStyle = '#eee';\n      canvasContext.fill();\n      canvasContext.beginPath();\n      canvasContext.arc(canvas.width / 2, canvas.height / 2, canvas.width / 2.5, 0, 2 * Math.PI);\n      canvasContext.fillStyle = '#f00';\n      canvasContext.clip();\n      canvasContext.drawImage(image, 0, 0, canvas.width, canvas.height);\n    }\n  },\n  {\n    name: 'tint',\n    fn: (image, canvas, canvasContext) => {\n      canvasContext.globalCompositeOperation = 'difference';\n      canvasContext.rect(0, 0, canvas.width, canvas.height);\n      canvasContext.fillStyle = 'rgba(255, 0, 0, 0.7)';\n      canvasContext.fill();\n    }\n  }\n];\n\nclass App extends Component {\n\n  state = {\n    displayedImage: null,\n    sampleImages: [],\n    imageFilters: IMAGE_FILTERS,\n    offline: true\n  }\n\n  constructor() {\n    super();\n\n    this.loadSampleImages = this.loadSampleImages.bind(this);\n    this.loadImageFromURL = this.loadImageFromURL.bind(this);\n    this.handleImageCapture = this.handleImageCapture.bind(this);\n    this.renderDisplayedImageOnCanvas = this.renderDisplayedImageOnCanvas.bind(this);\n    this.getFlatCanvasImage = this.getFlatCanvasImage.bind(this);\n    this.rotateDisplayedImage = this.rotateDisplayedImage.bind(this);\n    this.applyFilterFunction = this.applyFilterFunction.bind(this);\n  }\n\n  componentDidMount() {\n\n    this.canvas = this.refs.imageCanvas;\n    this.canvasContext = this.canvas.getContext('2d');\n    this.canvas.width = 1152;\n    this.canvas.height = 1152;\n\n    if (navigator.onLine) {\n      this.setState({ offline: false });\n      this.loadSampleImages();\n    }\n\n    window.addEventListener('offline', () => {\n      this.setState({ offline: true, sampleImages: [] });\n    });\n\n    window.addEventListener('online', () => {\n      this.loadSampleImages();\n      this.setState({ offline: false });\n    });\n\n  }\n\n  loadSampleImages() {\n    let sampleImagePromises = SAMPLE_IMAGE_CATEGORIES.map(sampleImageCategory => {\n      return this.loadImageFromURL(\n        `https://source.unsplash.com/collection/${sampleImageCategory.id}/1000x1000`,\n        sampleImageCategory.name\n      );\n    });\n    Promise.all(sampleImagePromises)\n      .then(sampleImages => {\n        this.setState({ sampleImages })\n      })\n      .catch(error => {\n        alert('An error occurred while loading the images, please try again.')\n      });\n  }\n\n  loadImageFromURL(url, alt = '') {\n    return image2base64(url)\n      .then(base64Src => {\n        let img = new Image();\n        img.src = 'data:image/jpeg;base64, ' + base64Src;\n        img.alt = alt;\n        return img;\n      })\n      .catch(error => console.error(error));\n  }\n\n  handleImageCapture(e) {\n\n    let reader = new FileReader();\n    if (e.target.files && e.target.files[0]) {\n      reader.onload = e => {\n        let img = new Image();\n        img.onload = () => this.renderDisplayedImageOnCanvas(img);\n        img.src = e.target.result;\n      }\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  }\n\n  renderDisplayedImageOnCanvas(image) {\n\n    let xOffset, yOffset, width, height;\n    let aspectRatio = image.width / image.height;\n\n    if (aspectRatio >= 1) {\n      height = this.canvas.width;\n      width = aspectRatio * this.canvas.width;\n      xOffset = (this.canvas.width - width) / 2;\n      yOffset = 0;\n    } else if (aspectRatio < 1) {\n      width = this.canvas.width;\n      height = (1 / aspectRatio) * this.canvas.height;\n      xOffset = 0;\n      yOffset = (this.canvas.height - height) / 2;\n    }\n\n    this.canvasContext.drawImage(image, xOffset, yOffset, width, height);\n    this.setState({ displayedImage: image });\n  }\n\n  getFlatCanvasImage() {\n    return new Promise((resolve, reject) => {\n      let image = new Image();\n      image.onload = () => resolve(image);\n      image.onerror = () => reject('Unable to getFlatCanvasImage()');\n      image.src = this.canvas.toDataURL(\"image/png\");\n    });\n  }\n\n  rotateDisplayedImage() {\n    let rotationOrientation = 90;\n    this.getFlatCanvasImage()\n      .then(image => {\n        this.canvasContext.save();\n        this.canvasContext.translate(this.canvas.width / 2, this.canvas.height / 2);\n        this.canvasContext.rotate(rotationOrientation * Math.PI / 180);\n        this.canvasContext.drawImage(\n          image,\n          -this.canvas.width / 2, -this.canvas.height / 2,\n          this.canvas.width, this.canvas.height\n        );\n        this.canvasContext.restore();\n      })\n  }\n\n  applyFilterFunction(filterFunction) {\n    this.getFlatCanvasImage().then(image => {\n      filterFunction(image, this.canvas, this.canvasContext);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <h1>My Instagram</h1>\n        { this.state.offline ? <Offline /> :\n          this.state.sampleImages.length === 0 ? <LoadingBlocks /> :\n          <div className=\"sample-images blocks-container\">\n          {\n            this.state.sampleImages.map(sampleImage => { \n              return <img key={'image-' + sampleImage.alt.toLowerCase()}\n                          src={sampleImage.src}\n                          alt={sampleImage.alt}\n                          onClick={() => this.renderDisplayedImageOnCanvas(sampleImage)} />\n            })\n          }\n          </div>\n        }\n        <div className=\"image-on-display\">\n          <canvas\n            ref=\"imageCanvas\"\n            className=\"image-canvas\"\n            width=\"576\" height=\"576\">\n          </canvas>\n          <div className=\"button-container upload\">\n            <input\n              id=\"file-upload-button\"\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={this.handleImageCapture} />\n            <label htmlFor=\"file-upload-button\"></label>\n          </div>\n          {\n            this.state.displayedImage &&\n            <div className=\"button-container rotate\">\n              <input\n                id=\"rotate-button\"\n                type=\"button\"\n                onClick={this.rotateDisplayedImage} />\n              <label htmlFor=\"rotate-button\"></label>\n            </div>\n          }\n        </div>\n        {\n          this.state.canvasImage &&\n          <img src={this.state.canvasImage.src} alt={this.state.canvasImage.alt} />\n        }\n        {\n          !this.state.displayedImage &&\n          <div className=\"image-filters blocks-container\">\n          </div>\n        }\n        {\n          this.state.displayedImage &&\n          <div className=\"image-filters blocks-container\">\n            { this.state.imageFilters.map(imageFilter => {\n                return <input key={`image-filter-${imageFilter.name}`}\n                          type=\"button\"\n                          className={`image-filter ${imageFilter.name}`}\n                          onClick={() => this.applyFilterFunction(imageFilter.fn)}\n                          />\n            })\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n\n}\n\nconst Offline = () => (\n  <div className=\"blocks-container offline\">\n  </div>\n)\n\nconst LoadingBlocks = () => (\n  <div className=\"blocks-container\">\n    <div className=\"loading-block\"></div>\n    <div className=\"loading-block\"></div>\n    <div className=\"loading-block\"></div>\n  </div>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}